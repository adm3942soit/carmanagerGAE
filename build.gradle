buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/libs-milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'
	}
}

plugins {

	id 'java'

}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.appengine'

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://maven.vaadin.com/vaadin-addons" }
	maven { url "https://mvnrepository.com/"}
}
def libs = [
		login: fileTree(dir: 'lib', include: '*.jar'),
		json: fileTree(dir: 'lib/json', include: '*.jar'),
		gwt:fileTree(dir: 'lib/gwt', include: '*.jar'),
		payment:fileTree(dir: 'lib/payment', include: '*.jar')
]

dependencies {
	//lombok
	compile('org.projectlombok:lombok:1.16.10')
	//orika
	compile('ma.glasnost.orika:orika-core:1.4.3')
	//guava
	compile('com.google.guava:guava:18.0')
	//apache
	compile ('org.apache.commons:commons-lang3:3.5')
	//javax
	compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	//joda
	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
	//servlet
	compile ('javax.servlet:javax.servlet-api:3.1.0')
	/*vaadin*/
	compile('com.vaadin:vaadin-compatibility-server:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-client-compiled:8.0.0')
	compile ('com.vaadin:vaadin-client-compiler:8.0.0')
	compile ('com.vaadin:vaadin-compatibility-shared:8.0.0')
	//design
	compile ('com.vaadin:vaadin-compatibility-themes:8.0.0')
	compile ('com.vaadin:vaadin-themes:8.0.0')
    //dir lib
	compile libs.login
	compile libs.json
	/*paypal*/
	compile 'com.paypal.sdk:rest-api-sdk:1.13.1'
	//from dir lib
	compile libs.payment
    /*Spring boot*/
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('com.vaadin:vaadin-spring-boot-starter:2.0.1')
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
		exclude module: "spring-boot-starter-tomcat"
	}
	compile 'org.springframework.boot:spring-boot-starter-tomcat:1.1.8.RELEASE'
	//maxmind
	compile('com.maxmind.geoip2:geoip2:2.8.1')
//	compile 'com.google.cloud:google-cloud:0.24.0-alpha'
    //mysql
	runtime('mysql:mysql-connector-java')
    //test spring
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//test orika
	testCompile('ma.glasnost.orika:orika-core:1.4.3')
}
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'com.google:guava:18.0',
		        'org.ow2.asm:asm:5.1',
				'org.ow2.asm:asm-tree:5.1',
				'org.ow2.asm:asm-commons:5.1',
				'com.vaadin:vaadin-spring-boot-starter:2.0.0',
				'com.vaadin:vaadin-spring-boot-starter:2.0.1',
				'org.projectlombok:lombok:1.16.10',
				'com.fasterxml.jackson.core:jackson-databind:2.8.1',
				'com.fasterxml.jackson.core:jackson-core:2.8.1',
				'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		//  *replace existing forced modules with new ones:
		forcedModules = ['com.google:guava:18.0',
						 'org.ow2.asm:asm:5.1',
						 'org.ow2.asm:asm-tree:5.1',
						 'org.ow2.asm:asm-commons:5.1',
				         'com.vaadin:vaadin-spring-boot-starter:2.0.0',
						 'com.vaadin:vaadin-spring-boot-starter:2.0.1',
						 'org.projectlombok:lombok:1.16.10',
						 'com.fasterxml.jackson.core:jackson-databind:2.8.1',
						 'com.fasterxml.jackson.core:jackson-core:2.8.1',
						 'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
		]
	}
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group + ":" + details.requested.name == 'com.google:guava') {
			details.useVersion "18.0"
			details.useTarget "com.google:guava:18.0"
		}
	}
}
configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.tomcat.embed') {
			details.useVersion '8.0.3'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:8.0.0"
	}
}
//jar {
//	manifest {
//		attributes 'Main-Class': 'com.adonis.VehiclyManagerApplication'
//	}
//	zip64 = true
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}

springBoot {
	mainClass = "com.adonis.VehiclyManagerApplication"
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.1'
}